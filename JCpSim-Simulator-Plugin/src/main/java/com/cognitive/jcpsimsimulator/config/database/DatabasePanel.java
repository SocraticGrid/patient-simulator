/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cognitive.jcpsimsimulator.config.database;

import java.util.prefs.Preferences;

final class DatabasePanel extends javax.swing.JPanel {

    public final static String URL = "url";
    public final static String USERNAME = "username";
    public final static String PASSWORD = "password";
    public final static String DIALECT = "dialect";
    
    public final static String URL_DEFAULT = "jdbc:mysql://localhost:3306/JCpSim";
    public final static String USERNAME_DEFAULT = "root";
    public final static String PASSWORD_DEFAULT = "root";
    public final static String DIALECT_DEFAULT = "org.hibernate.dialect.MySQLDialect";
    
    private final DatabaseOptionsPanelController controller;
    

    DatabasePanel(DatabaseOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtConnectionURL = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDialect = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.jLabel1.text")); // NOI18N

        txtConnectionURL.setText(org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.txtConnectionURL.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.jLabel2.text")); // NOI18N

        txtUsername.setText(org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.txtUsername.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.jLabel4.text")); // NOI18N

        txtDialect.setText(org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.txtDialect.text")); // NOI18N

        txtPassword.setText(org.openide.util.NbBundle.getMessage(DatabasePanel.class, "DatabasePanel.txtPassword.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(1, 1, 1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(69, 69, 69)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtConnectionURL)
                    .addComponent(txtUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 499, Short.MAX_VALUE)
                    .addComponent(txtPassword)
                    .addComponent(txtDialect))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtConnectionURL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDialect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(297, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        txtConnectionURL.setText(Preferences.userNodeForPackage(DatabasePanel.class).get(URL, URL_DEFAULT));
        txtUsername.setText(Preferences.userNodeForPackage(DatabasePanel.class).get(USERNAME, USERNAME_DEFAULT));
        txtPassword.setText(Preferences.userNodeForPackage(DatabasePanel.class).get(PASSWORD, PASSWORD_DEFAULT));
        txtDialect.setText(Preferences.userNodeForPackage(DatabasePanel.class).get(DIALECT, DIALECT_DEFAULT));
    }

    void store() {
        Preferences.userNodeForPackage(DatabasePanel.class).put(URL, txtConnectionURL.getText());
        Preferences.userNodeForPackage(DatabasePanel.class).put(USERNAME, txtUsername.getText());
        Preferences.userNodeForPackage(DatabasePanel.class).put(PASSWORD, new String(txtPassword.getPassword()));
        Preferences.userNodeForPackage(DatabasePanel.class).put(DIALECT, txtDialect.getText());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtConnectionURL;
    private javax.swing.JTextField txtDialect;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
